{% extends '/admin/dashboard.html.twig' %}

{% block title %}Category
{% endblock %}

{% block javascriptsBody %}
{% endblock %}

{% block javascripts %}
{{ parent() }}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.2/jquery.min.js"></script>
<script src="https://npmcdn.com/isotope-layout@3/dist/isotope.pkgd.js"></script>
<script src="https://npmcdn.com/isotope-fit-columns@1/fit-columns.js"></script>
{% endblock %}

{% block main_content %}
	<h1>Category</h1>

	<table class="table">
		<tbody>
			<tr>
				<th>Id</th>
				<td>{{ category.id }}</td>
			</tr>
			<tr>
				<th>Name</th>
				<td>{{ category.name }}</td>
			</tr>
		</tbody>
	</table>
	{% set categoryFolder = category.getUniqId()|upper %}

	<div id="content" class="isotopeGrid isotopeGridStyle">
		{% for photo in photos %}
			<div class="group grid-item isotopeGridItemStyle">
				<img class="h-full max-w-full rounded-lg object-cover" src='{{ asset('photos/public/' ~ categoryFolder ~ '/' ~ photo.filename) }}' alt="{{photo.title}}"/>
				{% include "admin/_favicon_checkbox.html.twig" with {'photo_id' : photo.id, 'parent_id' : category.getId(), 'favorite_photo' : category.getFavoritePhoto() is null ? null : category.getFavoritePhoto().getId()} %}
			</div>
		{% endfor %}
	</div>

	<div class="actionButtons flex flex-row my-6">

		<a href="{{ path('app_admin_category_index') }}" class="back-button">Revenir en arri√®re</a>

		<a href="{{ path('app_admin_category_edit', {'id': category.id}) }}" class="edit-button">Modifier</a>

		{{ include('admin/category/_delete_form.html.twig') }}

    </div>

	<script>
    document.addEventListener('DOMContentLoaded', function() {
        const checkboxes = document.querySelectorAll('.favorite-picture');

        checkboxes.forEach(function(checkbox) {
            checkbox.addEventListener('change', function() {
                parent_id = checkbox.dataset.parentId;
                photo_id = checkbox.dataset.photoId;

                checkedCheckboxes = Array.from(checkboxes).filter(function(cb) {
                    return cb.checked;
                });
                checkedCheckboxes.forEach(function(otherCheckbox) {
                    if (otherCheckbox !== checkbox) {
                        otherCheckbox.checked = false;
                    }
                });
                
				// Determine the value to send in the AJAX request
                const dataToSend = {
                    photoId: this.checked ? photo_id : null // Send photo_id if checked, otherwise send null
                };

                // Send an AJAX request to update favorite picture
                $.ajax({
                    url: '/admin/category/' + parent_id + '/update/favorite', // Replace with your actual route
                    type: 'POST',
                    data: dataToSend,
					error: function( response){
						alert('Erreur! ' + response.responseText);
					}
                });
            });
        });
    });

    </script>

{% endblock %}
