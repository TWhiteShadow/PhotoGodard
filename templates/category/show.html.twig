{% extends 'base.html.twig' %}


{% block javascripts %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.2/jquery.min.js"></script>
<script src="https://npmcdn.com/isotope-layout@3/dist/isotope.pkgd.js"></script>
<script src="https://npmcdn.com/isotope-fit-columns@1/fit-columns.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/magnific-popup.js/1.1.0/jquery.magnific-popup.js"
  integrity="sha512-C1zvdb9R55RAkl6xCLTPt+Wmcz6s+ccOvcr6G57lbm8M2fbgn2SUjUJbQ13fEyjuLViwe97uJvwa1EUf4F1Akw=="
  crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/magnific-popup.js/1.1.0/magnific-popup.css"
  integrity="sha512-WEQNv9d3+sqyHjrqUZobDhFARZDko2wpWdfcpv44lsypsSuMO0kHGd3MQ8rrsBn/Qa39VojphdU6CMkpJUmDVw=="
  crossorigin="anonymous" referrerpolicy="no-referrer" />
{% endblock %}

{% block javascriptsBody %}
<script>
  $(window).load(function () {
    document.querySelector("html").classList.remove("md:overflow-hidden");
    document.querySelector("html").classList.remove("overflow-scroll");

    // init Isotope
    var $grid = $('.myGrid').isotope({
      itemSelector: '.grid-item',
      masonry: {
        columnWidth: 0
      },
      getSortData: {
        name: '.name',
        symbol: '.symbol',
        number: '.number parseInt',
        category: '[data-category]',
        weight: function (itemElem) {
          var weight = $(itemElem).find('.weight').text();
          return parseFloat(weight.replace(/[\(\)]/g, ''));
        }
      }
    });

    $('.img-gallery-magnific').magnificPopup({
      delegate: 'a', // child items selector, by clicking on it popup will open
      type: 'image',
      gallery: {
        enabled: true,
        preload: [0, 2]
      },
      fixedContentPos: true,

      zoom: {
        enabled: true,

        duration: 300, // duration of the effect, in milliseconds
        easing: 'ease-in-out', // CSS transition easing function
      },
      retina: {
        ratio: 1,
        // Increase this number to enable retina image support.
        // Image in popup will be scaled down by this number.
        // Option can also be a function which should return a number (in case you support multiple ratios). For example:
        // ratio: function() { return window.devicePixelRatio === 1.5 ? 1.5 : 2  }


        replaceSrc: function (item, ratio) {
          return item.src.replace(/\.\w+$/, function (m) {
            return '@2x' + m;
          });
        } // function that changes image source
      },
      callbacks: {
        open: function () {
          let startX;
          const swipeArea = document.querySelector('.mfp-content');
          swipeArea.addEventListener('touchstart', handleTouchStart, false);
          swipeArea.addEventListener('touchmove', handleTouchMove, false);

          function handleTouchStart(event) {
            startX = event.touches[0].clientX;
          }

          function handleTouchMove(event) {
            if (!startX)
              return;


            const currentX = event.touches[0].clientX;
            const deltaX = currentX - startX;

            if (deltaX > 0) { // Swipe right
              document.querySelector('.mfp-arrow-left').click();
            } else { // Swipe left
              document.querySelector('.mfp-arrow-right').click();
            }

            // Reset startX to null after detecting the swipe
            startX = null;

            // Prevent default touchmove behavior (scrolling)
            event.preventDefault();
          }
        }
      }
    });
    $.extend(true, $.magnificPopup.defaults, {
      tClose: 'Fermer (Esc)', // Alt text on close button
      tLoading: 'Chargement...', // Text that is displayed during loading. Can contain %curr% and %total% keys
      gallery: {
        tPrev: 'Précédent (flèche gauche)', // Alt text on left arrow
        tNext: 'Suivant (flèche droite)', // Alt text on right arrow
        tCounter: '%curr% sur %total%' // Markup for "1 of 7" counter
      },
      image: {
        tError: '<a href="%url%">L\'image</a> n\'a pas pu être chargée.', // Error message when image n\'a pas pu être chargée.'
      },
      ajax: {
        tError: '<a href="%url%">Le contenu</a> n\'a pas pu être chargé.', // Error message when ajax request failed
      }
    });
  });
</script>
{% endblock %}


{% block body %}
<div class="flex flex-col justify-center w-full">
  <div class="myGrid max-w-[90%] md:max-w-[1200px] w-full my-0 mx-auto img-gallery-magnific">
    {% set photos = photos|reverse %}
    {% for i in range(0 ,(photos|length)- 1 , 1) %}
    <a class="grid-item magnific-img w-[100%] sm:w-[50%] md:w-1/3 min-w-[80%] sm:min-w-[40%] md:min-w-[20%] p-2"
      href="{{ asset('photos/public/' ~ category.getUniqId()|upper ~ '/' ~ photos[i].getFilename()) | imagine_filter('my_watermark_filter')}}">
      <img class="h-auto w-auto rounded-lg object-cover" width="200" height="100"
        src="{{ asset('photos/public/' ~ category.getUniqId()|upper ~ '/' ~ photos[i].getFilename()) | imagine_filter('thumbnail_web_path')}}"
        alt="{{ category.getName() ~ '-photo n°' ~ (i + 1) }}">
    </a>
    {% endfor %}
  </div>
</div>

{% endblock %}